{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Ana\\\\Desktop\\\\Test_Vue.js-Express.js\\\\server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Ana\\\\Desktop\\\\Test_Vue.js-Express.js\\\\server\",\"filename\":\"C:\\\\Users\\\\Ana\\\\Desktop\\\\Test_Vue.js-Express.js\\\\server\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Ana\\\\Desktop\\\\Test_Vue.js-Express.js\\\\server\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.9:development":{"value":{"code":"console.log('1 2 3 4 5 6 7 8 9 10');\n\n//încarcă modulul Express în proiect\nconst express = require('express');\n\n//încarcă modulul CORS, care este un middleware ce permite/restricționează\n//resursele partajate între diferite origini\nconst cors = require('cors');\n\n//încarcă modulul Morgan, un middleware pentru logging care înregistrează\n//detaliile cererilor HTTP care vin către server.\nconst morgan = require('morgan');\n\n//initializeaza o instanta a aplicatiei Express\nconst app = express();\n\n//Această linie spune aplicației Express să folosească middleware-ul Morgan\n//pentru logging, cu formatul 'combined', care este un format predefinit de Morgan\n//ce combină mai multe informații despre cerere.\napp.use(morgan('combined'));\n\n//foloseste un middleware pentru a analiza corpul cererilor JSON\napp.use(express.json());\napp.use(cors());\n\n//Aceasta creează un route de tip GET la calea '/status'.\n//Funcția cu parametrii `req` (cerere) și `res` (răspuns) va fi executată\n//atunci când acest endpoint este accesat.\napp.get('/status', (req, res) => {\n  res.send({\n    message: 'hello world!'\n  });\n});\n\n//Aceasta pornește serverul pe portul specificat. \n//În cazul în care variabila de mediu `PORT` nu este definită, \n//va folosi portul 8081 ca fallback.\napp.listen(process.env.PORT || 8081);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwiZXhwcmVzcyIsInJlcXVpcmUiLCJjb3JzIiwibW9yZ2FuIiwiYXBwIiwidXNlIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJtZXNzYWdlIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQW5hXFxEZXNrdG9wXFxUZXN0X1Z1ZS5qcy1FeHByZXNzLmpzXFxzZXJ2ZXJcXHNyY1xcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coJzEgMiAzIDQgNSA2IDcgOCA5IDEwJyk7XHJcblxyXG4vL8OubmNhcmPEgyBtb2R1bHVsIEV4cHJlc3Mgw65uIHByb2llY3RcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuXHJcbi8vw65uY2FyY8SDIG1vZHVsdWwgQ09SUywgY2FyZSBlc3RlIHVuIG1pZGRsZXdhcmUgY2UgcGVybWl0ZS9yZXN0cmljyJtpb25lYXrEg1xyXG4vL3Jlc3Vyc2VsZSBwYXJ0YWphdGUgw65udHJlIGRpZmVyaXRlIG9yaWdpbmlcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuXHJcbi8vw65uY2FyY8SDIG1vZHVsdWwgTW9yZ2FuLCB1biBtaWRkbGV3YXJlIHBlbnRydSBsb2dnaW5nIGNhcmUgw65ucmVnaXN0cmVhesSDXHJcbi8vZGV0YWxpaWxlIGNlcmVyaWxvciBIVFRQIGNhcmUgdmluIGPEg3RyZSBzZXJ2ZXIuXHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xyXG5cclxuLy9pbml0aWFsaXplYXphIG8gaW5zdGFudGEgYSBhcGxpY2F0aWVpIEV4cHJlc3NcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy9BY2Vhc3TEgyBsaW5pZSBzcHVuZSBhcGxpY2HIm2llaSBFeHByZXNzIHPEgyBmb2xvc2Vhc2PEgyBtaWRkbGV3YXJlLXVsIE1vcmdhblxyXG4vL3BlbnRydSBsb2dnaW5nLCBjdSBmb3JtYXR1bCAnY29tYmluZWQnLCBjYXJlIGVzdGUgdW4gZm9ybWF0IHByZWRlZmluaXQgZGUgTW9yZ2FuXHJcbi8vY2UgY29tYmluxIMgbWFpIG11bHRlIGluZm9ybWHIm2lpIGRlc3ByZSBjZXJlcmUuXHJcbmFwcC51c2UobW9yZ2FuKCdjb21iaW5lZCcpKVxyXG5cclxuLy9mb2xvc2VzdGUgdW4gbWlkZGxld2FyZSBwZW50cnUgYSBhbmFsaXphIGNvcnB1bCBjZXJlcmlsb3IgSlNPTlxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuXHJcbi8vQWNlYXN0YSBjcmVlYXrEgyB1biByb3V0ZSBkZSB0aXAgR0VUIGxhIGNhbGVhICcvc3RhdHVzJy5cclxuLy9GdW5jyJtpYSBjdSBwYXJhbWV0cmlpIGByZXFgIChjZXJlcmUpIMiZaSBgcmVzYCAocsSDc3B1bnMpIHZhIGZpIGV4ZWN1dGF0xINcclxuLy9hdHVuY2kgY8OibmQgYWNlc3QgZW5kcG9pbnQgZXN0ZSBhY2Nlc2F0LlxyXG5hcHAuZ2V0KCcvc3RhdHVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZCh7XHJcbiAgICAgICAgbWVzc2FnZTogJ2hlbGxvIHdvcmxkISdcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8vQWNlYXN0YSBwb3JuZciZdGUgc2VydmVydWwgcGUgcG9ydHVsIHNwZWNpZmljYXQuIFxyXG4vL8OObiBjYXp1bCDDrm4gY2FyZSB2YXJpYWJpbGEgZGUgbWVkaXUgYFBPUlRgIG51IGVzdGUgZGVmaW5pdMSDLCBcclxuLy92YSBmb2xvc2kgcG9ydHVsIDgwODEgY2EgZmFsbGJhY2suXHJcbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgxKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7O0FBRW5DO0FBQ0EsTUFBTUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDOztBQUVsQztBQUNBO0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDOztBQUU1QjtBQUNBO0FBQ0EsTUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsUUFBUSxDQUFDOztBQUVoQztBQUNBLE1BQU1HLEdBQUcsR0FBR0osT0FBTyxDQUFDLENBQUM7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBSSxHQUFHLENBQUNDLEdBQUcsQ0FBQ0YsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUUzQjtBQUNBQyxHQUFHLENBQUNDLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDTSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRXZCRixHQUFHLENBQUNDLEdBQUcsQ0FBQ0gsSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFZjtBQUNBO0FBQ0E7QUFDQUUsR0FBRyxDQUFDRyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQzdCQSxHQUFHLENBQUNDLElBQUksQ0FBQztJQUNMQyxPQUFPLEVBQUU7RUFDYixDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7O0FBRUY7QUFDQTtBQUNBO0FBQ0FQLEdBQUcsQ0FBQ1EsTUFBTSxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUksQ0FBQyJ9","map":{"version":3,"names":["console","log","express","require","cors","morgan","app","use","json","get","req","res","send","message","listen","process","env","PORT"],"sourceRoot":"C:\\Users\\Ana\\Desktop\\Test_Vue.js-Express.js\\server\\src\\","sources":["app.js"],"sourcesContent":["console.log('1 2 3 4 5 6 7 8 9 10');\r\n\r\n//încarcă modulul Express în proiect\r\nconst express = require('express');\r\n\r\n//încarcă modulul CORS, care este un middleware ce permite/restricționează\r\n//resursele partajate între diferite origini\r\nconst cors = require('cors');\r\n\r\n//încarcă modulul Morgan, un middleware pentru logging care înregistrează\r\n//detaliile cererilor HTTP care vin către server.\r\nconst morgan = require('morgan');\r\n\r\n//initializeaza o instanta a aplicatiei Express\r\nconst app = express();\r\n\r\n//Această linie spune aplicației Express să folosească middleware-ul Morgan\r\n//pentru logging, cu formatul 'combined', care este un format predefinit de Morgan\r\n//ce combină mai multe informații despre cerere.\r\napp.use(morgan('combined'))\r\n\r\n//foloseste un middleware pentru a analiza corpul cererilor JSON\r\napp.use(express.json());\r\n\r\napp.use(cors());\r\n\r\n//Aceasta creează un route de tip GET la calea '/status'.\r\n//Funcția cu parametrii `req` (cerere) și `res` (răspuns) va fi executată\r\n//atunci când acest endpoint este accesat.\r\napp.get('/status', (req, res) => {\r\n    res.send({\r\n        message: 'hello world!'\r\n    });\r\n});\r\n\r\n//Aceasta pornește serverul pe portul specificat. \r\n//În cazul în care variabila de mediu `PORT` nu este definită, \r\n//va folosi portul 8081 ca fallback.\r\napp.listen(process.env.PORT || 8081);\r\n"],"mappings":"AAAAA,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;AAEnC;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAElC;AACA;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;;AAEhC;AACA,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;;AAErB;AACA;AACA;AACAI,GAAG,CAACC,GAAG,CAACF,MAAM,CAAC,UAAU,CAAC,CAAC;;AAE3B;AACAC,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AAEvBF,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;AAEf;AACA;AACA;AACAE,GAAG,CAACG,GAAG,CAAC,SAAS,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7BA,GAAG,CAACC,IAAI,CAAC;IACLC,OAAO,EAAE;EACb,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACA;AACA;AACAP,GAAG,CAACQ,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC"}},"mtime":1706367977581}}